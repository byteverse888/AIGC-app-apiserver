import os
import uvicorn
from fastapi import FastAPI, UploadFile, File
from whisper import load_model

app = FastAPI()
model = load_model("large")

#Todo: add check token
#Todo: get file from minio
#Todo: 计费和日志
#Todo: call parseAPI
def transcribe_audio(audio_file):
    if not audio_file.filename.endswith((".wav", ".mp3")):
        raise ValueError("Invalid audio file. Supported formats: .wav, .mp3")
    
    file_path = os.path.join("/tmp/save", audio_file.filename)
    with open(file_path, "wb") as f:
        f.write(audio_file.file.read())
    
    result = model.transcribe(file_path)
    return result["text"]

@app.post("/transcribe")
async def transcribe(upload: UploadFile = File(...)):
    try:
        transcription = transcribe_audio(upload)
        return {"transcription": transcription}
    except Exception as e:
        return {"error": str(e)}

if __name__ == "__main__":
    uvicorn.run(app, host="0.0.0.0", port=11120)
